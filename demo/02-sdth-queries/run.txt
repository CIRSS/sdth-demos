=========================== bash cell | import sdth ============================

# Destroy the dataset
geist destroy --dataset kb --quiet

# Import the SDTH JSON-LD file
geist create --dataset kb --inputformat json-ld --inputfile data/sdth.jsonld --infer owl

--------------------------------- cell outputs ---------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


======================== bash cell | query object names ========================

geist report << __END_TEMPLATE__

{% query isfilepath=False as res_str %}
    PREFIX sdth: <http://DDI/SDTH/>
    PREFIX sdtest: <http://test/#>	

    SELECT distinct ?s ?sname
    WHERE {
        ?s  sdth:hasName ?sname .
    } ORDER BY ?s ?sname
{% endquery %}
{% set res_df = res_str | json2df %}

Object Names:

{% for _, row in res_df.iterrows() %}
    {{ row.s }} has name {{ row.sname }}
{% endfor %}
    
__END_TEMPLATE__

--------------------------------- cell outputs ---------------------------------


Object Names:

    <http://test/#DFIns001> has name "PoliticalData"
    <http://test/#DFIns002> has name "PersonalData"
    <http://test/#DFIns003> has name "PersonalData"
    <http://test/#DFIns004a> has name "PersonalData"
    <http://test/#DFIns004b> has name "PersonalData"
    <http://test/#DFIns004c> has name "PersonalData"
    <http://test/#DFIns005> has name "MergedData"
    <http://test/#FileIns001> has name "SmallTestPolitical.csv"
    <http://test/#FileIns002> has name "SmallTestPersonal.csv"
    <http://test/#FileIns003> has name "SmallTestMerged.csv"
    <http://test/#VarIns001> has name "Q3"
    <http://test/#VarIns002> has name "Q244_NEW"
    <http://test/#VarIns003> has name "Q356"
    <http://test/#VarIns004> has name "Q330A"
    <http://test/#VarIns005> has name "Q330C"
    <http://test/#VarIns006> has name "Q27"
    <http://test/#VarIns007> has name "Q1010"
    <http://test/#VarIns008> has name "ID"
    <http://test/#VarIns009> has name "PPEDUCAT"
    <http://test/#VarIns010> has name "PPHHSIZE"
    <http://test/#VarIns011> has name "PPRENT"
    <http://test/#VarIns012> has name "ID"
    <http://test/#VarIns013> has name "HHsize"
    <http://test/#VarIns014a> has name "HHcateg"
    <http://test/#VarIns014b> has name "HHcateg"
    <http://test/#VarIns014c> has name "HHcateg"
    
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


========= bash cell | wasDerivedFrom query for variable name HHcatege ==========

geist report << __END_TEMPLATE__

{% query isfilepath=False as res_str %}
    PREFIX sdth: <http://DDI/SDTH/>
    PREFIX sdtest: <http://test/#>	

    SELECT distinct ?sname ?oname
    WHERE {
        ?s  sdth:wasDerivedFrom+ ?o .
        ?s  sdth:hasName ?sname .
        ?o  sdth:hasName ?oname .
        FILTER (?sname = "HHcateg")
    } ORDER BY ?sname ?oname
{% endquery %}
{% set res_df = res_str | json2df %}

wasDerivedFrom query for variable name HHcateg:

{% for _, row in res_df.iterrows() %}
    {{ row.sname }} is derived from {{ row.oname }}
{% endfor %}

__END_TEMPLATE__

--------------------------------- cell outputs ---------------------------------


wasDerivedFrom query for variable name HHcateg:

    "HHcateg" is derived from "HHsize"
    "HHcateg" is derived from "PPHHSIZE"

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


======== bash cell | has an impact on query for variable name PPHHSIZE =========

geist report << __END_TEMPLATE__

{% query isfilepath=False as res_str %}
    PREFIX sdth: <http://DDI/SDTH/>
    PREFIX sdtest: <http://test/#>	

    SELECT distinct ?sname ?oname
    WHERE {
        ?s  sdth:wasDerivedFrom+ ?o .
        ?s  sdth:hasName ?sname .
        ?o  sdth:hasName ?oname .
        FILTER (?oname = "PPHHSIZE")
    } ORDER BY ?sname ?oname
{% endquery %}
{% set res_df = res_str | json2df %}

Has an impact on query for variable name PPHHSIZE:

{% for _, row in res_df.iterrows() %}
    {{ row.oname }} has an impact on {{ row.sname }}
{% endfor %}

__END_TEMPLATE__

--------------------------------- cell outputs ---------------------------------


Has an impact on query for variable name PPHHSIZE:

    "PPHHSIZE" has an impact on "HHcateg"
    "PPHHSIZE" has an impact on "HHsize"

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


=========== bash cell | ProgramSteps affecting variable name HHcateg ===========

geist report << __END_TEMPLATE__

{% query isfilepath=False as res_str %}
    PREFIX sdth: <http://DDI/SDTH/>
    PREFIX sdtest: <http://test/#>	

    SELECT ?sname ?oname ?pscode
    WHERE {
        ?s  sdth:wasDerivedFrom+ ?o .
        ?s  sdth:hasName ?sname .
        ?o  sdth:hasName ?oname .
        ?pstep sdth:assignsVariable ?o.
        ?pstep sdth:hasSourceCode ?pscode.
        FILTER (?sname = "HHcateg")
    } ORDER BY ?sname ?oname ?pscode
{% endquery %}
{% set res_df = res_str | json2df %}

ProgramSteps affecting variable name HHcateg:

{% for _, row in res_df.iterrows() %}
    {{ row.sname }} is affected by {{ row.oname }} in command [{{ row.pscode }}]
{% endfor %}

__END_TEMPLATE__

--------------------------------- cell outputs ---------------------------------


ProgramSteps affecting variable name HHcateg:

    "HHcateg" is affected by "HHsize" in command ["MergedData = PersonalData.merge(PoliticalData, on="ID", how="inner")"]
    "HHcateg" is affected by "HHsize" in command ["PersonalData  = PersonalData.assign(HHsize=PersonalData['PPHHSIZE'] )"]
    "HHcateg" is affected by "PPHHSIZE" in command ["MergedData = PersonalData.merge(PoliticalData, on="ID", how="inner")"]
    "HHcateg" is affected by "PPHHSIZE" in command ["PersonalData = pd.read_csv("SmallTestPersonal.csv")"]

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


===== bash cell | Variables indirectly affected by ProgramStep ProgStep004 =====

geist report << __END_TEMPLATE__

{% query isfilepath=False as res_str %}
    PREFIX sdth: <http://DDI/SDTH/>
    PREFIX sdtest: <http://test/#>	

    SELECT distinct ?sname ?oname ?pscode
    WHERE {
        ?s  sdth:wasDerivedFrom+ ?o .
        ?s  sdth:hasName ?sname .
        ?o  sdth:hasName ?oname .
        
        {
            SELECT ?o  ?pscode
            WHERE {
                ?pstep sdth:assignsVariable ?o.
                ?pstep sdth:hasSourceCode ?pscode.
                FILTER (?pstep = sdtest:ProgStep004 )
            }
        }
    } ORDER BY ?sname ?oname ?pscode
{% endquery %}
{% set res_df = res_str | json2df %}

Variables indirectly affected by ProgramStep ProgStep004:

{% for _, row in res_df.iterrows() %}
    {{ row.sname }} is affected by {{ row.oname }}, which is modified in command [{{ row.pscode }}]
{% endfor %}

__END_TEMPLATE__

--------------------------------- cell outputs ---------------------------------


Variables indirectly affected by ProgramStep ProgStep004:

    "HHcateg" is affected by "HHsize", which is modified in command ["PersonalData  = PersonalData.assign(HHsize=PersonalData['PPHHSIZE'] )"]

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


=== bash cell | Find a File containing variable PPHHSIZE that is Loaded in the Program ===

geist report << __END_TEMPLATE__

{% query isfilepath=False as res_str %}
    PREFIX sdth: <http://DDI/SDTH/>
    PREFIX sdtest: <http://test/#>	

    SELECT distinct ?sname ?pscode
    WHERE {
        ?s  sdth:hasVarInstance ?v .
        ?v  sdth:hasName 'PPHHSIZE' .
        ?ps  sdth:loadsFile ?s .
        ?ps sdth:hasSourceCode ?pscode .
        ?s sdth:hasName ?sname .
    } ORDER BY ?sname ?pscode
{% endquery %}
{% set res_df = res_str | json2df %}

Find a File containing variable PPHHSIZE that is Loaded in the Program:

{% for _, row in res_df.iterrows() %}
    Command [{{ row.pscode }}] loads {{ row.sname }} containing variable 'PPHHSIZE'
{% endfor %}

__END_TEMPLATE__

--------------------------------- cell outputs ---------------------------------


Find a File containing variable PPHHSIZE that is Loaded in the Program:

    Command ["PersonalData = pd.read_csv("SmallTestPersonal.csv")"] loads "SmallTestPersonal.csv" containing variable 'PPHHSIZE'

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


========== bash cell | elaborationOf query for variable name HHcateg ===========

geist report << __END_TEMPLATE__

{% query isfilepath=False as res_str %}
    PREFIX sdth: <http://DDI/SDTH/>
    PREFIX sdtest: <http://test/#>	

    SELECT distinct ?s ?o ?sname ?oname ?pscode
    WHERE {
        ?s sdth:elaborationOf+ ?o .
		?s sdth:hasName ?sname .
		?o sdth:hasName ?oname .
	    ?pstep sdth:usesVariable ?o.
        ?pstep sdth:hasSDTL ?pscode.
        FILTER (?sname = "HHcateg")
    } ORDER BY ?s ?o ?sname ?oname ?pscode
{% endquery %}
{% set res_df = res_str | json2df %}

elaborationOf query for variable name HHcateg:

{% for _, row in res_df.iterrows() %}
    {{ row.s }} named {{ row.sname }} is elaboration of {{ row.o }} named {{ row.oname }} in command {{ row.pscode }}
{% endfor %}

__END_TEMPLATE__

--------------------------------- cell outputs ---------------------------------


elaborationOf query for variable name HHcateg:

    <http://test/#VarIns014b> named "HHcateg" is elaboration of <http://test/#VarIns014a> named "HHcateg" in command ""command": "SetDataType""
    <http://test/#VarIns014c> named "HHcateg" is elaboration of <http://test/#VarIns014a> named "HHcateg" in command ""command": "SetDataType""
    <http://test/#VarIns014c> named "HHcateg" is elaboration of <http://test/#VarIns014b> named "HHcateg" in command ""command": "SetValueLabels""

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


========== bash cell | usesVariable query for variable name PPHHSIZE ===========

geist report << __END_TEMPLATE__

{% query isfilepath=False as res_str %}
    PREFIX sdth: <http://DDI/SDTH/>
    PREFIX sdtest: <http://test/#>	

    SELECT distinct ?psource ?oname
    WHERE {
        ?pstep sdth:usesVariable+ ?o .
		?pstep sdth:hasSourceCode ?psource .
		?o sdth:hasName ?oname .
        FILTER (?oname = "PPHHSIZE")
    } ORDER BY ?psource ?oname
{% endquery %}
{% set res_df = res_str | json2df %}

usesVariable query for variable name PPHHSIZE:

{% for _, row in res_df.iterrows() %}
    Command [{{ row.psource }}] is affected by {{ row.oname }}
{% endfor %}

__END_TEMPLATE__

--------------------------------- cell outputs ---------------------------------


usesVariable query for variable name PPHHSIZE:

    Command ["MergedData = PersonalData.merge(PoliticalData, on="ID", how="inner")"] is affected by "PPHHSIZE"
    Command ["MergedData.to_csv("SmallTestMerged.csv")"] is affected by "PPHHSIZE"
    Command ["PersonalData  = PersonalData.assign(HHsize=PersonalData['PPHHSIZE'] )"] is affected by "PPHHSIZE"

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


=== bash cell | usesVariable query for indirect effects of variable name PPHHSIZE ===

geist report << __END_TEMPLATE__

{% query isfilepath=False as res_str %}
    PREFIX sdth: <http://DDI/SDTH/>
    PREFIX sdtest: <http://test/#>	

    SELECT distinct ?psource ?sname ?oname
    WHERE {
        ?pstep  sdth:usesVariable+ ?s .
		?pstep  sdth:hasSourceCode ?psource .
	  
		{
            SELECT distinct  ?s  ?sname ?oname
            WHERE {
                ?s  sdth:wasDerivedFrom+ ?o .
                ?s  sdth:hasName ?sname .
                ?o  sdth:hasName ?oname .
                FILTER (?oname = "PPHHSIZE" )  
            }
        }
    } ORDER BY ?psource ?sname ?oname
{% endquery %}
{% set res_df = res_str | json2df %}

usesVariable query for indirect effects of variable name PPHHSIZE:

{% for _, row in res_df.iterrows() %}
    Command [{{ row.psource }}] is affected by {{ row.sname }} which is affected by {{ row.oname }}
{% endfor %}

__END_TEMPLATE__

--------------------------------- cell outputs ---------------------------------


usesVariable query for indirect effects of variable name PPHHSIZE:

    Command ["MergedData = PersonalData.merge(PoliticalData, on="ID", how="inner")"] is affected by "HHsize" which is affected by "PPHHSIZE"
    Command ["MergedData.to_csv("SmallTestMerged.csv")"] is affected by "HHsize" which is affected by "PPHHSIZE"
    Command ["PersonalData['HHcateg'] = pd.cut(PersonalData['HHsize'], [1, 2, 3, 5, 7, 10, 999], include_lowest=True, right=False, labels=['1', '2', '3-4', '5-6', '7-9', '10+'] )"] is affected by "HHcateg" which is affected by "PPHHSIZE"
    Command ["PersonalData['HHcateg'] = pd.cut(PersonalData['HHsize'], [1, 2, 3, 5, 7, 10, 999], include_lowest=True, right=False, labels=['1', '2', '3-4', '5-6', '7-9', '10+'] )"] is affected by "HHsize" which is affected by "PPHHSIZE"

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


=== bash cell | usesVariable query DIRECT AND INDIRECT for variable name PPHHSIZE ===

geist report << __END_TEMPLATE__

{% query isfilepath=False as res_str %}
    PREFIX sdth: <http://DDI/SDTH/>
    PREFIX sdtest: <http://test/#>	

    SELECT distinct ?psource ?oname
	WHERE {
		{
			?pstep  sdth:usesVariable+ ?o .
			?pstep  sdth:hasSourceCode ?psource .
			?o  sdth:hasName ?oname .
			FILTER (?oname = "PPHHSIZE")
		}

		UNION

		{
			?pstep  sdth:usesVariable+ ?s2 .
			?pstep  sdth:hasSourceCode ?psource .
		  
			{
                SELECT distinct  ?s2   ?oname
			    WHERE {
                    ?s2  sdth:wasDerivedFrom+ ?o2 .
                    ?s2  sdth:hasName ?oname .
                    ?o2  sdth:hasName ?o2name .
                    FILTER (?o2name = "PPHHSIZE" )  
                }
			}
		}
	} ORDER BY ?psource ?oname
{% endquery %}
{% set res_df = res_str | json2df %}

usesVariable query DIRECT AND INDIRECT for variable name PPHHSIZE:

{% for _, row in res_df.iterrows() %}
    Command [{{ row.psource }}] is affected by {{ row.oname }}
{% endfor %}

{% destroy dataset="kb" %}

__END_TEMPLATE__

--------------------------------- cell outputs ---------------------------------


usesVariable query DIRECT AND INDIRECT for variable name PPHHSIZE:

    Command ["MergedData = PersonalData.merge(PoliticalData, on="ID", how="inner")"] is affected by "HHsize"
    Command ["MergedData = PersonalData.merge(PoliticalData, on="ID", how="inner")"] is affected by "PPHHSIZE"
    Command ["MergedData.to_csv("SmallTestMerged.csv")"] is affected by "HHsize"
    Command ["MergedData.to_csv("SmallTestMerged.csv")"] is affected by "PPHHSIZE"
    Command ["PersonalData  = PersonalData.assign(HHsize=PersonalData['PPHHSIZE'] )"] is affected by "PPHHSIZE"
    Command ["PersonalData['HHcateg'] = pd.cut(PersonalData['HHsize'], [1, 2, 3, 5, 7, 10, 999], include_lowest=True, right=False, labels=['1', '2', '3-4', '5-6', '7-9', '10+'] )"] is affected by "HHcateg"
    Command ["PersonalData['HHcateg'] = pd.cut(PersonalData['HHsize'], [1, 2, 3, 5, 7, 10, 999], include_lowest=True, right=False, labels=['1', '2', '3-4', '5-6', '7-9', '10+'] )"] is affected by "HHsize"


^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


